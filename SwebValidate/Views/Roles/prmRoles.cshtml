@model SwebValidate.Models.Roles

@{
	IEnumerable<SWEBDB_DataAccess.Models.Roles> prmRoles = ViewData["Roles"] as IEnumerable<SWEBDB_DataAccess.Models.Roles>;
}
<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>UserValidations</title>
	<script type="text/javascript">
		jQuery(document).ready(function ($) {
			if (@TempData["roleModal"].ToString() == false) {
				console.log("item.id:" + @Model.id);
				if (@Model.id > 0) {
					$("#mTitle").text("Editar Rol");
					$('.RoleModal').attr('action', '/Roles/Edit')
				}
				else {
					$("#mTitle").text("Crear Rol");
					$('.RoleModal').attr('action', '/Roles/Create')
				}
				$("#mRole").modal('show');
			}
		});
	</script>
</head>
<body>
	@using (Html.BeginForm("Create", "Roles", FormMethod.Post, new { @class = "RoleModal" }))
	{
		@Html.AntiForgeryToken()
		<div id="mRole" class="modal fade" role="dialog">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
						<h4 id="mTitle" class="modal-title">Crear Role</h4>
					</div>
					<div class="modal-body">
						<div class="wrap-editForm100">
							@Html.ValidationSummary(true, "", new { @class = "text-danger" })

							<div class="wrap-input100 validate-input" data-validate="Enter role">
								<span class="form-subtitle p-b-10 p-t-10">
									Rol
								</span>
								@Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "input100", type = "text", placeholder = "Rol" } })
								@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
							</div>
							<div class="wrap-input100 validate-input" data-validate="Enter AllowedValidations">
								<span class="form-subtitle p-b-10 p-t-10">
									Validaciones Permitidas
								</span>
								@Html.EditorFor(model => model.AllowedValidations, new { htmlAttributes = new { @class = "input100", placeholder = "Validaciones Permitidas" } })
								@Html.ValidationMessageFor(model => model.AllowedValidations, "", new { @class = "text-danger" })
							</div>
							@Html.HiddenFor(model => model.id)
						</div>
					</div>
					<div class="modal-footer">
						<button id="btGuardar" type="submit" class="btn btn-warning" title="Guardar cambios.">
							<i class="glyphicon glyphicon-floppy-disk"></i>
							Guardar
						</button>
					</div>
				</div>
			</div>
		</div>
	}
	<br />
	<table class="table">
		<tr>
			<td colspan="3">
				<button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("Create", "Roles")'">
					<i class="glyphicon glyphicon-user"></i> Crear Rol
				</button>
			</td>
		</tr>
		<tr>
			<th>
				Role
			</th>
			<th>
				Validaciones Permitidas
			</th>
			<th></th>
		</tr>

		@foreach (var item in prmRoles)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Role)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.AllowedValidations)
				</td>
				<td>
					<button class="btn btn-default btn-sm" type="button" data-id="@item.id" onclick="location.href='@Url.Action("Edit", "Roles", new { id = item.id })'">
						<span class="glyphicon glyphicon-edit"></span>
					</button>
				</td>
			</tr>
		}

	</table>
</body>
</html>
